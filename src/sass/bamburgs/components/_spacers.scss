@mixin spacer-type ($i, $type, $key) {
   .#{$type} {
      @include builder ((value: $i, query: $key))                     { #{$type}: #{$i * $spacing-multiplier}px;        }
      @include builder ((modifier: 'top', value: $i, query: $key))    { #{$type}-top: #{$i * $spacing-multiplier}px;    }
      @include builder ((modifier: 'right', value: $i, query: $key))  { #{$type}-right: #{$i * $spacing-multiplier}px;  }
      @include builder ((modifier: 'bottom', value: $i, query: $key)) { #{$type}-bottom: #{$i * $spacing-multiplier}px; }
      @include builder ((modifier: 'left', value: $i, query: $key))   { #{$type}-left: #{$i * $spacing-multiplier}px;   }
      @include builder ((modifier: 'top-bottom', value: $i, query: $key)) {
         #{$type}-bottom: #{$i * $spacing-multiplier}px;
         #{$type}-top:    #{$i * $spacing-multiplier}px;
      }
      @include builder ((modifier: 'left-right', value: $i, query: $key)) {
         #{$type}-left:  #{$i * $spacing-multiplier}px;
         #{$type}-right: #{$i * $spacing-multiplier}px;
      }
   }
}

@each $key, $breakpoint in $breakpoint-list {
   @for $i from 0 through $spacing-amount {
      @include spacer-type($i, 'p', $key);
      @include spacer-type($i, 'm', $key);
   }

   .m {
      @include builder((modifier: 'center', query: $key)) {
         margin-left: auto !important;
         margin-right: auto !important;
      }
   }
}
