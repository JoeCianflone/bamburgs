.thin      { font-weight: 100; }
.xlight    { font-weight: 200; }
.light     { font-weight: 300; }
.regular   { font-weight: 400; }
.medium    { font-weight: 500; }
.semi-bold { font-weight: 600; }
.bold      { font-weight: 700; }
.xbold     { font-weight: 800; }
.black     { font-weight: 900; }

@each $key, $family in $font-families {
   .#{$key} { font-family: $family; }
}


@each $key, $breakpoint in $breakpoint-list {
   .txt {
      @include builder ((modifier: 'left'))   { text-align: left;   }
      @include builder ((modifier: 'right'))  { text-align: right;  }
      @include builder ((modifier: 'center')) { text-align: center; }

      @include builder ((modifier: 'upper'))  { text-transform: uppercase;  }
      @include builder ((modifier: 'lower'))  { text-transform: lowercase;  }
      @include builder ((modifier: 'cap')) { text-transform: capitalize; }
      @include builder ((modifier: 'full')) { text-transform: full-width; }

      @include builder ((modifier: 'hide')) {
         overflow: hidden;
         text-indent: 100%;
         white-space: nowrap;
      }
   }

   $fs: 1;
   @each $value in $font-sizes {
      .size {
         @include builder ((value: $fs, query: $key)) { font-size: $value; }
         $fs: $fs + 1;
      }
   }

   @for $i from 0 through 20 {
      $height: $i / 10;

      .ls {
         @include builder((value: $i, query: $key)) { letter-spacing: #{$i}px; }

         @if ($i > 0) {
            @include builder((value: '-#{$i}', query: $key)) { letter-spacing: -#{$i}px; }
         }
      }

      .lh {
         @include builder((value: $i, query: $key)) { line-height: $height; }

         @if ($i > 0) {
            @include builder((value: '-#{$i}', query: $key)) { line-height: -#{$height}; }
         }
      }
   }
}




