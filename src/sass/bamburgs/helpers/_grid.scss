@if ($use-flexbox-grid == true) {
   $block-width: 100% / $grid-columns;
   $row-compensation: $grid-gutter * -1;

   @mixin gutters() {
      @if $grid-gutter-setting == 'split'  {
         padding-left: $grid-gutter / 2;
         padding-right: $grid-gutter / 2;
      } @else {
         padding-left: $grid-gutter;
         padding-right: $grid-gutter;
      }
   }

   .row {
      align-content: center;
      align-items: flex-start;
      display: flex;
      flex: 1 0 auto;
      flex-direction: row;
      flex-wrap: wrap;
      justify-content: flex-start;

      .row {
         @if $grid-gutter-setting == 'split' {
            $row-compensation: $row-compensation / 2;
         }

         margin-right: $row-compensation;
         margin-left: $row-compensation;
      }
   }

   .col {
      @include gutters();
      flex: 1 0 auto;
      position: relative;

      @include modifier('first') { order: 0; }
      @include modifier('last') { order: 1; }
   }

   @for $i from 1 through $grid-columns {
      .col {
         @include value($i) {
            @include gutters();
            flex-basis: $i * $block-width;
            max-width: $i * $block-width;
            position: relative;
         }
      }

      .push {
         @include value($i) { margin-left: $i * $block-width; }
      }
      .pull {
         @include value($i) {
            margin-left: auto;
            margin-right: $i * $block-width;
         }
      }
   }

   .pull {
      @include value('right') {
         margin-left: auto;
         margin-right: 0;
      }
   }

   @each $key, $breakpoint in $breakpoints {
      .col {
         @include resize-to($key, 'first') { order: 0; }
         @include resize-to($key, 'last') { order: 1; }
      }

      @for $i from 1 through $grid-columns {
         .col {
            @include resize-to($key, false, $i) {
               @include gutters();

               flex-basis: $i * $block-width;
               max-width: $i * $block-width;
               position: relative;
            }
         }

         .push {
            @include resize-to($key, false, $i) { margin-left: $i * $block-width; }
         }
         .pull {
            @include resize-to($key, false, $i) {
               margin-left: auto;
               margin-right: $i * $block-width;
            }
         }
      }

      .pull {
         @include resize-to($key, false, 'right') {
            margin-left: auto;
            margin-right: 0;
         }
      }
   }

}
