$block-width: 100% / $grid-columns;

@mixin gutters() {
   padding-left: $grid-gutter;
   padding-right: $grid-gutter;
}

@mixin column() {
   @include gutters();
   flex-basis: 0;
   flex-grow: 1;
   position: relative;

   @content;
}

.col {
   @include column();
}

.col--first { order: 0; }
.col--last { order: 1; }

@for $i from 1 through $grid-columns {
   .col-#{$i} {
      @include gutters();

      flex-basis: $i * $block-width;
      max-width: $i * $block-width;
      position: relative;
   }

   .offset-#{$i} {
      margin-left: $i * $block-width;
   }

   .push-#{$i} {
      left: $i * $block-width;
   }

   .pull-#{$i} {
      right: $i * $block-width;
   }
}

@each $key, $breakpoint in $breakpoints {

   @include resize-to($key, 'col--first') { order: 0; }
   @include resize-to($key, 'col--last') { order: 1; }

   @for $i from 1 through $grid-columns {
      @include resize-to($key, 'col-#{$i}') {
         @include gutters();
         flex-basis: $i * $block-width;
         max-width: $i * $block-width;
         position: relative;
      }

      @include resize-to($key, 'offset-#{$i}') { margin-left: $i * $block-width; }

      @include resize-to($key, 'push-#{$i}') { left: $i * $block-width; }

      @include resize-to($key, 'pull-#{$i}') { right: $i * $block-width; }
   }
}
